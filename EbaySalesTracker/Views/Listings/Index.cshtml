@model EbaySalesTracker.ViewModels.ListingsViewModel

@{
    ViewBag.Title = "Listings";
}

<h2>Listings</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<p>
    @Html.ActionLink("Update All Listings", "GetAllListings")
</p>
<table class="table table-striped table-hover">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Listing.StartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Listing.EndDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Listing.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Listing.CurrentPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Listing.TotalNetFees)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Listing.Profit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Listing.QuantitySold)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Listing.ListingStatus)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InventoryItems)
            <a href="~/InventoryItems/Create"><i class="glyphicon glyphicon-plus"></i></a>
        </th>


        <th></th>
    </tr>

@foreach (var item in Model.Listings) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.StartDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CurrentPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TotalNetFees)
        </td>
        <td>
            <p id="@("profit_"+item.ItemId)">@item.Profit</p>
            @*<input type="text" class="col-xs-1" />*@
            @*@Html.DisplayFor(modelItem => item.Profit)*@
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.QuantitySold)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ListingStatus)
        </td>
        <td>
            @Html.DropDownList("SelectInventoryItem_" + item.ItemId.ToString(), Model.InventoryItems,"Select", new {@onchange ="TestFunc(this.value, this.id)", @class = "form-control"})

        </td>

        <td>
            @*@Html.ActionLink("Edit", "Edit", new { id=item.ItemId }) |
            @Html.ActionLink("Details", "Details", new { id=item.ItemId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ItemId }) |*@
            @*@Html.ActionLink("Update Fees", "UpdateFeesById", new { id = item.ItemId })*@
        </td>
    </tr>
}

</table>



<script>

    //$(document).ready(function(){
    //    alert("ready");
    //});
    function TestFunc(inventoryItemId, selectListId)
    {
        var listingItemId = selectListId.split("_");

        $.ajax({
            type: 'POST',
            url: '/Listings/AssociateInventoryItemToListing',
            data: { inventoryItemId: inventoryItemId, listingItemId:listingItemId[1] },
            cache: false,
            success: function (result) {
                $('#profit_'+listingItemId[1]).text(result.profit.toFixed(2));                
            }
        });

        function CalculateProfit(listingItemId)
        {
           // $('#profit_' + listingItemId).val("5");
            console.log(listingItemId);
        }


    }

   
</script>
