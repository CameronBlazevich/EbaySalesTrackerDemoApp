
@model EbaySalesTracker.ViewModels.ListingsViewModel

@{
    ViewBag.Title = "Listings";
}

<style>
    li.highlight a {
        color: white;
        background-color: #428bca;
    }

    .no-underline {
        text-decoration: none !important;
    }

    th {
        white-space: nowrap;
        text-align: center;
    }

    td {
        text-align: center;
    }
</style>

<div class="panel">
    <div class="panel-heading text-right">
        <h3 class="pull-left">All Listings</h3>

        @Html.ActionLink("Update Listings", "UpdateListings", null, new { @class = "btn btn-primary" })

    </div>
    <div class="panel-body col-md-12">

        <table class="table table-striped table-hover">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Listing.StartDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Listing.EndDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Listing.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Listing.CurrentPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Listing.TotalNetFees)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Listing.Profit)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Listing.QuantitySold)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Listing.ListingStatus)
                </th>
                <th nowrap>
                    @Html.DisplayNameFor(model => model.InventoryItems) <a href="#" data-toggle="modal" data-target="#create-inventory-item" class=""><i class="glyphicon glyphicon-plus"></i></a>
                </th>


                <th></th>
            </tr>

            @foreach (var item in Model.Listings)
            {
                <tr>
                    <td>
                        @{string convertedStartDate = item.StartDate.ToString("MM/dd/yyyy");}
                        @Html.DisplayFor(modelItem => convertedStartDate)
                    </td>
                    <td>
                        @{string convertedEndDate = item.EndDate.ToString("MM/dd/yyyy");}
                        @Html.DisplayFor(modelItem => convertedEndDate)
                    </td>
                    <td style="text-align:left;">
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CurrentPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalNetFees)
                    </td>
                    <td>
                        <p id="@("profit_" + item.ItemId)">@item.Profit</p>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.QuantitySold)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ListingStatus)
                    </td>
                    <td>
                        @*<div class="dropdown" data-toggle="tooltip" title="@(item.InventoryItem == null ? "Select..." : item.InventoryItem.Description )">
                            <button nowrap class="btn dropdown-toggle btn-block btn-link no-underline" style="color:black" type="button" data-toggle="dropdown">
                                @{if (@item.InventoryItem != null)
                                    {
                                        <p>@(item.InventoryItem.Description.Length > 17 ? item.InventoryItem.Description.Substring(0, 17) + "..." : item.InventoryItem.Description)<span class="caret"></span></p>
                                    }
                                    else
                                    {
                                        <p>Select...<span class="caret"></span></p>
                                    }
                                }

                            </button>
                            <ul class="dropdown-menu">  
                                @foreach (var invItem in Model.Items)
                                {
                                    <li><a href="javascript:AssoicateItemToListing(@invItem.Id,@item.ItemId)">@invItem.Description</a></li>
                                }l
                            </ul>
                        </div>*@


                        @{if (@item.InventoryItem != null)
                            {
                                <div>
                                    <a href="#" id="@("listingid_" + item.ItemId)" data-type="select" data-name="inventory-item-id" data-pk="1" data-value="@item.InventoryItem.Id" data-original-title="Select Product">@item.InventoryItem.Description</a>
                                </div>
                            }
                            else
                            {
                                <div>
                                    <a href="#" id="@("listingid_" + item.ItemId)" data-type="select" data-name="inventory-item-id" data-pk="1" data-value="-1" data-original-title="Select Product">None</a>
                                </div>
                            }
                        }
                    </td>
                    <td></td>
                </tr>
                            }

        </table>
        @{  var itemsPerPage = 10;
            var totalPages = Math.Ceiling(((double)Model.TotalListings / (double)itemsPerPage));
            var currentPage = Convert.ToInt32(Request.Params["skip"]) / 10;

        }
        <ul class="pagination" id="pagination">
            @{ if (currentPage != 0)
                {
                    <li>@Html.ActionLink("First", "Index", "Listings", new { top = itemsPerPage, skip = 0 }, null)</li>
                    <li>@Html.ActionLink("Prev", "Index", "Listings", new { top = itemsPerPage, skip = ((currentPage - 1) * itemsPerPage) > 0 ? ((currentPage - 1) * itemsPerPage) : 0 }, null)</li>
                }}
            @{ for (var i = 1; i <= totalPages; i++)
                {
                    <li class="pagination-item">@Html.ActionLink(i.ToString(), "Index", "Listings", new { top = itemsPerPage, skip = (i - 1) * itemsPerPage }, null)</li>
                }
            }
            @{if (currentPage + 1 < totalPages)
                {
                    <li>@Html.ActionLink("Next", "Index", "Listings", new { top = itemsPerPage, skip = (currentPage + 1) >= totalPages ? currentPage * itemsPerPage : (currentPage + 1) * itemsPerPage }, null)</li>
                    <li>@Html.ActionLink("Last", "Index", "Listings", new { top = itemsPerPage, skip = (totalPages - 1) * itemsPerPage }, null)</li>
                } }
        </ul>

        <div class="pull-right">

            <button id="export" class="btn btn-info">Export To CSV</button>
        </div>
    </div>
    <div class="row">
        
    </div>
</div>
   <!-- Create Modal -->
<div class="modal fade" id="create-inventory-item" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content create-inventory-modal">
            <div class="modal-header row">
                <div class="col-md-10">
                    <h3 class="modal-title" id="exampleModalLabel">New Product</h3>
                </div>
                <div class="col-md-2">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>
            <div class="modal-body">
                @Html.Partial("../InventoryItems/_CreateInventoryItem", new EbaySalesTracker.Models.InventoryItem())
            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <div class="pull-right">
                        <button type="button" class="btn btn-default btn-danger" data-dismiss="modal">Cancel</button>
                        <button type="submit" id="create-inventory-submit" form="CreateInventoryItemForm" class="btn btn-default btn-primary">Create</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    var inventoryItems = {};
    $(document).ready(function () {
        

        
        var pageToHighlight;
        if (@currentPage === 0)
            pageToHighlight = 1;

        if (@currentPage > 0)
            pageToHighlight = @currentPage+3

        $('#pagination li:nth-child(' + pageToHighlight + ')').addClass('highlight');

        dataService.GetInventoryItems(setupInventoryItemArrayForDdl);
    });
    function setupInventoryItemArrayForDdl(data) {
        inventoryItems['-1'] = "None";
        data.forEach(function(inventoryItem, index){
            inventoryItems[inventoryItem.Id] = inventoryItem.Description;
        });

        $('[id^="listingid_"]').attr({"data-source" : JSON.stringify(inventoryItems)});
        $('[id^="listingid_"]').editable();
    }

    $('[id^="listingid_"]').on('save',function(e, editable) {
        var selectListId = $(this).attr('id');
        var listingId = selectListId.split("_")[1];
        var selectedInventoryItemId = editable.newValue;
        AssociateItemToListing(selectedInventoryItemId,listingId);

    });

    $(".dropdown-menu li a").click(function () {
        var invItemDesc = "";
        invItemDesc = helper.elliptify($(this).text(), 20);
        //need to set tooltip
        //$(this).attr('data-original-title', $(this).text());
        $(this).parents(".dropdown").find('.btn').html(invItemDesc + ' <span class="caret"></span>');
        $(this).parents(".dropdown").find('.btn').val($(this).data('value'));
    });
    $('#export').click(function () {
        ExportToCsv();
    })

    function ExportToCsv() {
        window.location = '@Url.Action("GetCsvReport", "Listings")';
    }

    function AssociateItemToListing(inventoryItemId, listingItemId) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("AssociateInventoryItemToListing", "Listings")',
            data: { inventoryItemId: inventoryItemId, listingItemId: listingItemId },
            cache: false,
            success: function (result) {
                $('#profit_' + listingItemId).text(result.profit.toFixed(2));
            }
        });
    }
</script>
